{"version":3,"sources":["components/Notification.js","components/UserView.js","hooks/index.js","reducers/notificationReducer.js","services/blogs.js","reducers/loginReducer.js","services/login.js","components/Login.js","components/Menu.js","reducers/blogReducer.js","services/users.js","reducers/userReducer.js","App.js","index.js"],"names":["connect","state","console","log","notification","props","text","Message","positive","isError","error","getUser","ownProps","users","find","u","id","userid","blogs","user","undefined","Header","as","name","List","bulleted","map","blog","Item","to","title","useField","type","useState","value","setValue","onChange","event","target","reset","initialState","setNotification","sec","dispatch","data","setTimeout","resetNotification","notificationReducer","action","baseUrl","token","axios","get","then","response","config","headers","Authorization","post","put","delete","newToken","setLogin","blogsService","resetLogin","loginReducer","login","credentials","a","Login","withRouter","username","password","usernameInputProps","passwordInputProps","handleLogin","preventDefault","loginService","loggedInUser","window","localStorage","setItem","JSON","stringify","history","push","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","data-cy","Button","mapDispatchToProps","Menu","position","first","onClick","removeItem","updateBlog","blogReducer","concat","b","filter","userReducer","initializeBlogs","createBlog","author","url","likes","createdBlog","likeBlog","updatedBlog","removeBlog","initializeUsers","usersService","useEffect","loggedUserJSON","getItem","parse","exact","path","render","match","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","Container","document","getElementById"],"mappings":"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","file":"static/js/main.8c2ed8f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Notification.css'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = (props) => {\r\n\r\n    // console.log(props)\r\n    if (!props.notification.text) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Message positive={!props.notification.isError} error={props.notification.isError}>\r\n            {props.notification.text}\r\n        </Message>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('Notification - mapStateToProps', state)\r\n    return {\r\n        notification: state.notification\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = {\r\n//   selectAnecdote\r\n// }\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n    // mapDispatchToProps\r\n)(Notification)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Header, List } from 'semantic-ui-react'\r\n\r\n\r\nconst UserView = (props) => {\r\n\r\n    console.log('UserView props', props)\r\n\r\n    if (props.user === undefined) {\r\n        return null\r\n    }\r\n\r\n    console.log('props.user', props.user)\r\n\r\n    return (\r\n        <div>\r\n            <Header as='h2'>{props.user.name}</Header>\r\n            <Header as='h3'>Added blogs</Header>\r\n            <List bulleted>\r\n                {props.user.blogs.map(blog =>\r\n                    <List.Item key={blog.id}>\r\n                        <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                    </List.Item>\r\n                )}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getUser = (state, ownProps) => {\r\n    return state.users.find(u => u.id === ownProps.userid)\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        blogs: state.blogs,\r\n        user: getUser(state, ownProps),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(UserView)","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}","const initialState = { text: '', isError: false }\r\n\r\nexport const setNotification = (text, isError, sec) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'SET_NOTIF',\r\n            data: { text, isError }\r\n        })\r\n        setTimeout(() => {\r\n            dispatch(resetNotification())\r\n        }, sec * 1000)\r\n    }\r\n}\r\n\r\nexport const resetNotification = () => {\r\n    return {\r\n        type: 'RESET_NOTIF'\r\n    }\r\n}\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n    console.log('notificationReducer', state, action)\r\n    switch (action.type) {\r\n        case 'SET_NOTIF':\r\n            return action.data\r\n        case 'RESET_NOTIF':\r\n            return ''\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n  console.log('blog service set token', token)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (blog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log('Create', blog, config)\r\n\r\n  const request = axios.post(baseUrl, blog, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addComment = (id, comment) => {\r\n  return axios.post(`${baseUrl}/${id}/comments`, { text: comment })\r\n    .then(response => response.data)\r\n}\r\n\r\nconst update = (id, blog) => {\r\n  return axios.put(`${baseUrl}/${id}`, blog)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst remove = (blog) => {\r\n  const config = {\r\n    data: blog,\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log('Remove', blog, config)\r\n\r\n  return axios.delete(`${baseUrl}/${blog.id}`, config)\r\n    .then(response => {\r\n      console.log(response.data)\r\n      // return response.data\r\n    })\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken, addComment }","import blogsService from '../services/blogs'\r\n\r\n\r\nexport const setLogin = (user) => {\r\n    return dispatch => {\r\n        // console.log('dispatch setLogin', user)\r\n        blogsService.setToken(user.token)\r\n        dispatch({\r\n            type: 'SET_LOGIN',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetLogin = () => {\r\n    return dispatch => {\r\n        blogsService.setToken('')\r\n        dispatch({\r\n            type: 'RESET_LOGIN'\r\n        })\r\n    }\r\n}\r\n\r\nconst loginReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOGIN':\r\n            return action.data\r\n        case 'RESET_LOGIN':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setLogin } from '../reducers/loginReducer'\r\nimport loginService from '../services/login'\r\n\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react'\r\n\r\nconst Login = withRouter((props) => {\r\n    const username = useField('text')\r\n    const password = useField('password')\r\n\r\n    const usernameInputProps = { ...username }\r\n    delete usernameInputProps.reset\r\n\r\n    const passwordInputProps = { ...password }\r\n    delete passwordInputProps.reset\r\n\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            console.log('handleLogin', username.value, password.value)\r\n\r\n            const loggedInUser = await loginService.login({ username: username.value, password: password.value })\r\n\r\n            console.log('loggedUser', loggedInUser)\r\n\r\n            if (loggedInUser) {\r\n                window.localStorage.setItem('loggedUser', JSON.stringify(loggedInUser))\r\n                props.setLogin(loggedInUser)\r\n                // blogsService.setToken(loggedInUser.token)\r\n\r\n                username.reset()\r\n                password.reset()\r\n                console.log('User logged in', username, password, props.login)\r\n\r\n                props.history.push('/')\r\n            }\r\n        } catch (exception) {\r\n            console.log('handleLogin exception', exception)\r\n            props.setNotification('Wrong username or password', true, 5)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        // <div>\r\n        //     <h2>Login</h2>\r\n\r\n        //     <form onSubmit={handleLogin}>\r\n        //         <div>\r\n        //             username <input name=\"Username\" {...usernameInputProps} />\r\n        //         </div>\r\n        //         <div>\r\n        //             password <input name=\"Password\" {...passwordInputProps} />\r\n        //         </div>\r\n        //         <button type=\"submit\">login</button>\r\n        //     </form>\r\n        // </div>\r\n\r\n\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='top'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' textAlign='center'> Login  </Header>\r\n                <Form size='large' onSubmit={handleLogin}>\r\n                    <Segment stacked>\r\n                        <Form.Input fluid icon='user' iconPosition='left' name=\"Username\" {...usernameInputProps} data-cy='username'/>\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            type='password'\r\n                            name=\"Password\" {...passwordInputProps}\r\n                            data-cy='password'\r\n                        />\r\n                        <Button fluid size='large' data-cy='submit'>Login</Button>\r\n                    </Segment>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // blogs: state.blogs,\r\n        login: state.login,\r\n        // users: state.users,\r\n        notification: state.notification\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setNotification,\r\n    setLogin\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { resetLogin } from '../reducers/loginReducer'\r\nimport { Menu, Button } from 'semantic-ui-react'\r\n\r\nconst AppMenu = (props) => {\r\n    // const menuStyle = {\r\n    //     background: \"lightgrey\",\r\n    //     padding: 5\r\n    // }\r\n    // const padding = {\r\n    //     paddingRight: 5\r\n    // }\r\n    console.log('props.login', props.login)\r\n\r\n    const handleLogout = () => {\r\n        window.localStorage.removeItem('loggedUser')\r\n        props.resetLogin()\r\n      }\r\n\r\n    return (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to='/' data-cy='blogs-link'>blogs</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Link to='/users' data-cy='users-link'>users</Link>\r\n            </Menu.Item>\r\n            <Menu.Menu position='right'>\r\n                {props.login\r\n                    ?\r\n                    <>\r\n                        <Menu.Item> {props.login.name.first} logged in</Menu.Item>\r\n                        <Menu.Item><Button onClick={handleLogout}>logout</Button></Menu.Item>\r\n                    </>\r\n                    : null\r\n                }\r\n            </Menu.Menu>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.login,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    resetLogin\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppMenu)","import blogsService from '../services/blogs'\r\n\r\nconst initialState = []\r\n\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogsService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBlog = ({ title, author, url }) => {\r\n    return async dispatch => {\r\n        const createdBlog = await blogsService.create({\r\n            title,\r\n            author,\r\n            url,\r\n            likes: 0,\r\n        })\r\n        dispatch({\r\n            type: 'NEW_BLOG',\r\n            data: createdBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n    return async dispatch => {\r\n        await blogsService.update(blog.id, blog)\r\n        dispatch({\r\n            type: 'UPDATE_BLOG',\r\n            data: blog\r\n        })\r\n    }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n    const updatedBlog = {\r\n        ...blog,\r\n        likes: blog.likes + 1\r\n    }\r\n    return updateBlog(updatedBlog)\r\n}\r\n\r\nexport const addComment = (blog, comment) => {\r\n    return async dispatch => {\r\n        const updatedBlog = await blogsService.addComment(blog.id, comment)\r\n        console.log('reducer addComment updatedBlog',comment, updatedBlog)\r\n        dispatch({\r\n            type: 'UPDATE_BLOG',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (blog) => {\r\n    return async dispatch => {\r\n        await blogsService.remove(blog)\r\n        dispatch({\r\n            type: 'REMOVE_BLOG',\r\n            data: blog\r\n        })\r\n    }\r\n}\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n    console.log('blogReducer', state, action)\r\n    switch (action.type) {\r\n        case 'INIT_BLOGS':\r\n            console.log('INIT_BLOGS', state.concat(action.data))\r\n            return action.data\r\n        case 'NEW_BLOG':\r\n            console.log('NEW_BLOG', state.concat(action.data))\r\n            return state.concat(action.data)\r\n        case 'UPDATE_BLOG':\r\n            console.log('UPDATE_BLOG', state.concat(action.data))\r\n            return state.map(b => b.id === action.data.id ? action.data : b)\r\n\r\n        case 'REMOVE_BLOG':\r\n            return state.filter(b => b.id !== action.data.id)\r\n\r\n        // case 'LIKE_BLOG':\r\n        //     const blogToLike = state.find(b => b.id === action.data)\r\n        //     if (blogToLike) {\r\n        //         const updatedBlog = {\r\n        //             ...blogToLike,\r\n        //             likes: blogToLike.likes + 1\r\n        //         }\r\n        //         return state.map(b => b.id === updatedBlog.id ? updatedBlog : b)\r\n        //     }\r\n        //     else\r\n        //         return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default blogReducer","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = ({ username, password }) => {\r\n  const request = axios.post(baseUrl, { username, password })\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create }","import usersService from '../services/users'\r\n\r\nconst initialState = []\r\n\r\nexport const initializeUsers = () => {\r\n    return async dispatch => {\r\n        const users = await usersService.getAll()\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: users,\r\n        })\r\n    }\r\n}\r\n\r\n// export const createUser = ({ username, password }) => {\r\n//     return async dispatch => {\r\n//         const createdUser = await usersService.create({ username, password })\r\n//         dispatch({\r\n//             type: 'NEW_USER',\r\n//             data: createdUser\r\n//         })\r\n//     }\r\n// }\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    console.log('userReducer', state, action)\r\n    switch (action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data\r\n        // case 'NEW_USER':\r\n        //     return state.concat(action.data)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  withRouter,\r\n//   Redirect\r\n} from 'react-router-dom'\r\n\r\n// import blogsService from './services/blogs'\r\n// import loginService from './services/login'\r\nimport Notification from './components/Notification'\r\n// import Blogs from './components/Blogs'\r\n// import BlogView from './components/BlogView'\r\n// import UserList from './components/UserList'\r\nimport UserView from './components/UserView'\r\n// import BlogForm from './components/BlogForm'\r\n// import Toggable from './components/Toggable'\r\nimport Login from './components/Login'\r\nimport Menu from './components/Menu'\r\n\r\nimport { initializeBlogs, createBlog, updateBlog, likeBlog, removeBlog } from './reducers/blogReducer'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { setLogin, resetLogin } from './reducers/loginReducer'\r\nimport { initializeUsers } from './reducers/userReducer'\r\n\r\nconst App = (props) => {\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      console.log('load user', loggedUserJSON)\r\n      const user = JSON.parse(loggedUserJSON)\r\n      props.setLogin(user)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('get all blogs')\r\n    props.initializeBlogs()\r\n    props.initializeUsers()\r\n  }, [])\r\n\r\n  console.log('check user', props.login)\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n\r\n        <Menu></Menu>\r\n\r\n        <Notification />\r\n\r\n         <Route exact path=\"/users/:id\" render={({ match }) => <UserView userid={match.params.id} />} />\r\n         <Route exact path=\"/login\" render={() => <Login />} />\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('APP - mapStateToProps', state)\r\n  return {\r\n    blogs: state.blogs,\r\n    login: state.login,\r\n    // users: state.users,\r\n    notification: state.notification\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializeBlogs, createBlog, updateBlog, likeBlog, removeBlog,\r\n  initializeUsers,\r\n  setLogin, resetLogin,\r\n  setNotification\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport { Container } from 'semantic-ui-react'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificationReducer,\r\n    blogs: blogReducer,\r\n    users: userReducer,\r\n    login: loginReducer,\r\n})\r\n\r\nconst store = createStore(reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    ))\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <Container>\r\n                <App />\r\n            </Container>\r\n        </Provider>\r\n        ,\r\n        document.getElementById('root'))\r\n}\r\n\r\nrenderApp()\r\n// store.subscribe(renderApp)\r\n"],"sourceRoot":""}