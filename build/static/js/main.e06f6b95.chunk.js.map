{"version":3,"sources":["components/Notification.js","hooks/index.js","services/blogs.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/BlogForm.js","components/Toggable.js","components/SimpleBlog.js","components/Blogs.js","components/Comments.js","components/BlogView.js","components/UserList.js","components/UserView.js","reducers/loginReducer.js","services/login.js","components/Login.js","components/Menu.js","services/users.js","reducers/userReducer.js","App.js","index.js"],"names":["connect","state","console","log","notification","props","text","Message","positive","isError","error","useField","type","useState","value","setValue","onChange","event","target","reset","baseUrl","token","axios","get","then","response","data","blog","config","headers","Authorization","post","id","put","delete","newToken","comment","initialState","createBlog","title","author","url","dispatch","a","blogsService","likes","createdBlog","updateBlog","likeBlog","updatedBlog","removeBlog","blogReducer","action","concat","map","b","filter","setNotification","sec","setTimeout","resetNotification","notificationReducer","mapDispatchToProps","blogs","titleInputProps","authorInputProps","urlInputProps","Form","onSubmit","preventDefault","Field","name","Button","primary","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","data-cy","buttonLabel","replace","onClick","children","ownProps","className","to","Header","as","Toggable","sort","addComment","commentInputProps","Input","comments","c","BlogView","withRouter","icon","window","confirm","history","push","user","login","username","Icon","href","getBlog","find","blogid","users","u","length","getUser","userid","undefined","List","bulleted","Item","setLogin","resetLogin","loginReducer","credentials","Login","password","usernameInputProps","passwordInputProps","handleLogin","loginService","loggedInUser","localStorage","setItem","JSON","stringify","Grid","textAlign","height","verticalAlign","Column","maxWidth","size","Segment","stacked","fluid","iconPosition","Menu","position","first","removeItem","userReducer","initializeBlogs","initializeUsers","usersService","useEffect","loggedUserJSON","getItem","parse","exact","path","render","match","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","Container","document","getElementById"],"mappings":"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","file":"static/js/main.e06f6b95.chunk.js","sourcesContent":["import React from 'react'\nimport './Notification.css'\nimport { connect } from 'react-redux'\n\nimport { Message } from 'semantic-ui-react'\n\nconst Notification = (props) => {\n\n    // console.log(props)\n    if (!props.notification.text) {\n        return null\n    }\n\n    return (\n        <Message positive={!props.notification.isError} error={props.notification.isError}>\n            {props.notification.text}\n        </Message>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log('Notification - mapStateToProps', state)\n    return {\n        notification: state.notification\n    }\n}\n\n// const mapDispatchToProps = {\n//   selectAnecdote\n// }\n\nexport default connect(\n    mapStateToProps\n    // mapDispatchToProps\n)(Notification)","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n  console.log('blog service set token', token)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (blog) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  console.log('Create', blog, config)\n\n  const request = axios.post(baseUrl, blog, config)\n  return request.then(response => response.data)\n}\n\nconst addComment = (id, comment) => {\n  return axios.post(`${baseUrl}/${id}/comments`, { text: comment })\n    .then(response => response.data)\n}\n\nconst update = (id, blog) => {\n  return axios.put(`${baseUrl}/${id}`, blog)\n    .then(response => response.data)\n}\n\nconst remove = (blog) => {\n  const config = {\n    data: blog,\n    headers: { Authorization: token },\n  }\n\n  console.log('Remove', blog, config)\n\n  return axios.delete(`${baseUrl}/${blog.id}`, config)\n    .then(response => {\n      console.log(response.data)\n      // return response.data\n    })\n}\n\nexport default { getAll, create, update, remove, setToken, addComment }","import blogsService from '../services/blogs'\n\nconst initialState = []\n\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogsService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: blogs,\n        })\n    }\n}\n\nexport const createBlog = ({ title, author, url }) => {\n    return async dispatch => {\n        const createdBlog = await blogsService.create({\n            title,\n            author,\n            url,\n            likes: 0,\n        })\n        dispatch({\n            type: 'NEW_BLOG',\n            data: createdBlog\n        })\n    }\n}\n\nexport const updateBlog = (blog) => {\n    return async dispatch => {\n        await blogsService.update(blog.id, blog)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: blog\n        })\n    }\n}\n\nexport const likeBlog = (blog) => {\n    const updatedBlog = {\n        ...blog,\n        likes: blog.likes + 1\n    }\n    return updateBlog(updatedBlog)\n}\n\nexport const addComment = (blog, comment) => {\n    return async dispatch => {\n        const updatedBlog = await blogsService.addComment(blog.id, comment)\n        console.log('reducer addComment updatedBlog',comment, updatedBlog)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: updatedBlog\n        })\n    }\n}\n\nexport const removeBlog = (blog) => {\n    return async dispatch => {\n        await blogsService.remove(blog)\n        dispatch({\n            type: 'REMOVE_BLOG',\n            data: blog\n        })\n    }\n}\n\nconst blogReducer = (state = initialState, action) => {\n    console.log('blogReducer', state, action)\n    switch (action.type) {\n        case 'INIT_BLOGS':\n            console.log('INIT_BLOGS', state.concat(action.data))\n            return action.data\n        case 'NEW_BLOG':\n            console.log('NEW_BLOG', state.concat(action.data))\n            return state.concat(action.data)\n        case 'UPDATE_BLOG':\n            console.log('UPDATE_BLOG', state.concat(action.data))\n            return state.map(b => b.id === action.data.id ? action.data : b)\n\n        case 'REMOVE_BLOG':\n            return state.filter(b => b.id !== action.data.id)\n\n        // case 'LIKE_BLOG':\n        //     const blogToLike = state.find(b => b.id === action.data)\n        //     if (blogToLike) {\n        //         const updatedBlog = {\n        //             ...blogToLike,\n        //             likes: blogToLike.likes + 1\n        //         }\n        //         return state.map(b => b.id === updatedBlog.id ? updatedBlog : b)\n        //     }\n        //     else\n        //         return state\n        default:\n            return state\n    }\n}\n\n\nexport default blogReducer","const initialState = { text: '', isError: false }\n\nexport const setNotification = (text, isError, sec) => {\n    return dispatch => {\n        dispatch({\n            type: 'SET_NOTIF',\n            data: { text, isError }\n        })\n        setTimeout(() => {\n            dispatch(resetNotification())\n        }, sec * 1000)\n    }\n}\n\nexport const resetNotification = () => {\n    return {\n        type: 'RESET_NOTIF'\n    }\n}\n\nconst notificationReducer = (state = initialState, action) => {\n    console.log('notificationReducer', state, action)\n    switch (action.type) {\n        case 'SET_NOTIF':\n            return action.data\n        case 'RESET_NOTIF':\n            return ''\n        default:\n            return state\n    }\n}\n\n\nexport default notificationReducer","/* eslint-disable indent */\nimport React from 'react'\nimport { useField } from '../hooks'\nimport { connect } from 'react-redux'\n\nimport { Form, Button } from 'semantic-ui-react'\n\nimport { createBlog, } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\n\nconst BlogForm = (props) => {\n\n    const title = useField('text')\n    const author = useField('text')\n    const url = useField('text')\n\n    const titleInputProps = { ...title }\n    delete titleInputProps.reset\n\n    const authorInputProps = { ...author }\n    delete authorInputProps.reset\n\n    const urlInputProps = { ...url }\n    delete urlInputProps.reset\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        props.createBlog({\n            title: title.value,\n            author: author.value,\n            url: url.value\n        })\n\n        props.setNotification(`blog ${title.value} created`, false, 5)\n        url.reset()\n        author.reset()\n        title.reset()\n    }\n\n    return (\n        < div >\n            <Form onSubmit={handleSubmit}>\n                <Form.Field>\n                    <label>Title</label>\n                    <input name=\"title\" {...titleInputProps} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Author</label>\n                    <input name=\"author\" {...authorInputProps} />\n                </Form.Field>\n                <Form.Field>\n                    <label>URL</label>\n                    <input name=\"url\" {...urlInputProps} />\n                </Form.Field>\n                <Button primary type=\"submit\">create</Button>\n            </Form>\n        </div >)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs,\n        notification: state.notification\n    }\n}\n\nconst mapDispatchToProps = {\n    createBlog, setNotification\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BlogForm)\n","import React, { useState } from 'react'\n\nimport {  Button } from 'semantic-ui-react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button data-cy={props.buttonLabel.replace(' ', '-')} primary onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button data-cy='cancel' onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Togglable","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Blog.css'\n\nconst SimpleBlog = (props) => (\n    <div className='blog'>\n        <div>\n            <Link to={`/blogs/${props.blog.id}`}> {props.blog.title} - {props.blog.author}</Link>\n        </div>\n        {/* <div>\n            blog has {blog.likes} likes\n            <button onClick={onClick}>like</button>\n        </div> */}\n    </div>\n)\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        blog: ownProps.blog,\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SimpleBlog)","import React from 'react'\nimport BlogForm from './BlogForm'\nimport Toggable from './Toggable'\n// import Blog from './Blog'\nimport SimpleBlog from './SimpleBlog'\nimport { connect } from 'react-redux'\nimport { Header } from 'semantic-ui-react'\n\n\nconst Blogs = (props) => {\n\n    return (\n        <div>\n            <Header as='h2'>Blogs</Header>\n\n            <Toggable buttonLabel='new note'>\n                <BlogForm ></BlogForm>\n            </Toggable>\n\n            <div>\n                {props.blogs ? props.blogs\n                    .sort((a, b) => b.likes - a.likes)\n                    .map(blog =>\n                        // <Blog key={blog.id} blog={blog} />\n                        <SimpleBlog key={blog.id} blog={blog} />\n                        ) : ''}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs\n    }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Blogs)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useField } from '../hooks'\nimport { addComment } from '../reducers/blogReducer'\n\nimport { Header, Input, Button } from 'semantic-ui-react'\n\n\nconst Comments = (props) => {\n\n    const comment = useField('text')\n\n    const commentInputProps = { ...comment }\n    delete commentInputProps.reset\n\n    const handleAddComment = (event) => {\n        event.preventDefault()\n\n        if (comment.value) {\n            props.addComment(props.blog, comment.value)\n            comment.reset()\n        }\n    }\n\n    return (\n        <div>\n            <Header as='h3'>Comments</Header>\n            <div>\n                <Input name=\"comment\" {...commentInputProps} data-cy='comment-field'/>\n                <Button primary data-cy='add-comment-btn' onClick={handleAddComment}>add</Button>\n            </div>\n            <div>\n                <ul>\n                    {props.blog.comments.map(c => <li key={c}>{c}</li>)}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        blog: ownProps.blog,\n        // login: state.login,\n        notification: state.notification,\n    }\n}\n\nconst mapDispatchToProps = {\n    addComment\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(Comments)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { likeBlog, removeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport Comments from './Comments'\n\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst BlogView = withRouter((props) => {\n\n    const setButtonVisbility = () => {\n        return { display: props.blog.user && props.login.username === props.blog.user.username ? '' : 'none' }\n    }\n\n    const handleRemoveClick = () => {\n        if (window.confirm(`Remove blog ${props.blog.title}?`)) {\n            props.removeBlog(props.blog)\n            props.setNotification(`blog ${props.blog.title} removed`, false, 5)\n            props.history.push('/')\n        }\n    }\n\n    if (!props.blog) return null\n\n    return (\n        <div>\n\n            <div><h2>{props.blog.title} - {props.blog.author}</h2><Button icon onClick={handleRemoveClick} style={setButtonVisbility()}>\n                <Icon name='trash' />\n            </Button> </div>\n\n            <div>added by {props.blog.user ? props.blog.user.name : 'unknown'}</div>\n            <div>{props.blog.likes} likes\n                        <Button icon data-cy='like-btn' onClick={() => { props.likeBlog(props.blog) }}>\n                    <Icon name='like' />\n                </Button></div>\n            <div><a href={props.blog.url}>{props.blog.url}</a></div>\n            <br />\n\n            <Comments blog={props.blog}></Comments>\n        </div>\n    )\n})\n\nconst getBlog = (state, ownProps) => {\n    console.log('getBlog', state, ownProps)\n    return state.blogs.find(b => b.id === ownProps.blogid)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        blog: getBlog(state, ownProps),\n        login: state.login,\n        notification: state.notification,\n    }\n}\n\nconst mapDispatchToProps = {\n    likeBlog, removeBlog, setNotification\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(BlogView)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Header } from 'semantic-ui-react'\n\nconst UserList = (props) => (\n    <div>\n        <Header as='h2'>Users</Header>\n        <table>\n            <tbody>\n                <tr>\n                    <th></th>\n                    <th>blogs created</th>\n                </tr>\n                {props.users.map(u =>\n                    <tr key={u.username}>\n                        <td>\n                            <Link to={`/users/${u.id}`}>{u.name}</Link>\n                        </td>\n                        <td>{u.blogs.length}</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    </div>\n)\n\nconst mapStateToProps = (state) => {\n    return {\n        // blogs: state.blogs,\n        users: state.users,\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(UserList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Header, List } from 'semantic-ui-react'\n\n\nconst UserView = (props) => {\n\n    console.log('UserView props', props)\n\n    if (props.user === undefined) {\n        return null\n    }\n\n    console.log('props.user', props.user)\n\n    return (\n        <div>\n            <Header as='h2'>{props.user.name}</Header>\n            <Header as='h3'>Added blogs</Header>\n            <List bulleted>\n                {props.user.blogs.map(blog =>\n                    <List.Item key={blog.id}>\n                        <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                    </List.Item>\n                )}\n            </List>\n        </div>\n    )\n}\n\nconst getUser = (state, ownProps) => {\n    return state.users.find(u => u.id === ownProps.userid)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        blogs: state.blogs,\n        user: getUser(state, ownProps),\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(UserView)","import blogsService from '../services/blogs'\n\n\nexport const setLogin = (user) => {\n    return dispatch => {\n        // console.log('dispatch setLogin', user)\n        blogsService.setToken(user.token)\n        dispatch({\n            type: 'SET_LOGIN',\n            data: user\n        })\n    }\n}\n\nexport const resetLogin = () => {\n    return dispatch => {\n        blogsService.setToken('')\n        dispatch({\n            type: 'RESET_LOGIN'\n        })\n    }\n}\n\nconst loginReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_LOGIN':\n            return action.data\n        case 'RESET_LOGIN':\n            return null\n        default:\n            return state\n    }\n}\n\nexport default loginReducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useField } from '../hooks'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { setNotification } from '../reducers/notificationReducer'\nimport { setLogin } from '../reducers/loginReducer'\nimport loginService from '../services/login'\n\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react'\n\nconst Login = withRouter((props) => {\n    const username = useField('text')\n    const password = useField('password')\n\n    const usernameInputProps = { ...username }\n    delete usernameInputProps.reset\n\n    const passwordInputProps = { ...password }\n    delete passwordInputProps.reset\n\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            console.log('handleLogin', username.value, password.value)\n\n            const loggedInUser = await loginService.login({ username: username.value, password: password.value })\n\n            console.log('loggedUser', loggedInUser)\n\n            if (loggedInUser) {\n                window.localStorage.setItem('loggedUser', JSON.stringify(loggedInUser))\n                props.setLogin(loggedInUser)\n                // blogsService.setToken(loggedInUser.token)\n\n                username.reset()\n                password.reset()\n                console.log('User logged in', username, password, props.login)\n\n                props.history.push('/')\n            }\n        } catch (exception) {\n            console.log('handleLogin exception', exception)\n            props.setNotification('Wrong username or password', true, 5)\n        }\n    }\n\n\n    return (\n        // <div>\n        //     <h2>Login</h2>\n\n        //     <form onSubmit={handleLogin}>\n        //         <div>\n        //             username <input name=\"Username\" {...usernameInputProps} />\n        //         </div>\n        //         <div>\n        //             password <input name=\"Password\" {...passwordInputProps} />\n        //         </div>\n        //         <button type=\"submit\">login</button>\n        //     </form>\n        // </div>\n\n\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='top'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' textAlign='center'> Login  </Header>\n                <Form size='large' onSubmit={handleLogin}>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' name=\"Username\" {...usernameInputProps} data-cy='username'/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            type='password'\n                            name=\"Password\" {...passwordInputProps}\n                            data-cy='password'\n                        />\n                        <Button fluid size='large' data-cy='submit'>Login</Button>\n                    </Segment>\n                </Form>\n            </Grid.Column>\n        </Grid>\n    )\n})\n\n\nconst mapStateToProps = (state) => {\n    return {\n        // blogs: state.blogs,\n        login: state.login,\n        // users: state.users,\n        notification: state.notification\n    }\n}\n\nconst mapDispatchToProps = {\n    setNotification,\n    setLogin\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { resetLogin } from '../reducers/loginReducer'\nimport { Menu, Button } from 'semantic-ui-react'\n\nconst AppMenu = (props) => {\n    // const menuStyle = {\n    //     background: \"lightgrey\",\n    //     padding: 5\n    // }\n    // const padding = {\n    //     paddingRight: 5\n    // }\n    console.log('props.login', props.login)\n\n    const handleLogout = () => {\n        window.localStorage.removeItem('loggedUser')\n        props.resetLogin()\n      }\n\n    return (\n        <Menu>\n            <Menu.Item>\n                <Link to='/' data-cy='blogs-link'>blogs</Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to='/users' data-cy='users-link'>users</Link>\n            </Menu.Item>\n            <Menu.Menu position='right'>\n                {props.login\n                    ?\n                    <>\n                        <Menu.Item> {props.login.name.first} logged in</Menu.Item>\n                        <Menu.Item><Button onClick={handleLogout}>logout</Button></Menu.Item>\n                    </>\n                    : <Link to='/login' >login</Link>\n                }\n            </Menu.Menu>\n        </Menu>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n    }\n}\n\nconst mapDispatchToProps = {\n    resetLogin\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppMenu)","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = ({ username, password }) => {\n  const request = axios.post(baseUrl, { username, password })\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create }","import usersService from '../services/users'\n\nconst initialState = []\n\nexport const initializeUsers = () => {\n    return async dispatch => {\n        const users = await usersService.getAll()\n        dispatch({\n            type: 'INIT_USERS',\n            data: users,\n        })\n    }\n}\n\n// export const createUser = ({ username, password }) => {\n//     return async dispatch => {\n//         const createdUser = await usersService.create({ username, password })\n//         dispatch({\n//             type: 'NEW_USER',\n//             data: createdUser\n//         })\n//     }\n// }\n\nconst userReducer = (state = initialState, action) => {\n    console.log('userReducer', state, action)\n    switch (action.type) {\n        case 'INIT_USERS':\n            return action.data\n        // case 'NEW_USER':\n        //     return state.concat(action.data)\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\n// import blogsService from './services/blogs'\n// import loginService from './services/login'\nimport Notification from './components/Notification'\nimport Blogs from './components/Blogs'\nimport BlogView from './components/BlogView'\nimport UserList from './components/UserList'\nimport UserView from './components/UserView'\n// import BlogForm from './components/BlogForm'\n// import Toggable from './components/Toggable'\nimport Login from './components/Login'\nimport Menu from './components/Menu'\n\nimport { initializeBlogs, createBlog, updateBlog, likeBlog, removeBlog } from './reducers/blogReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { setLogin, resetLogin } from './reducers/loginReducer'\nimport { initializeUsers } from './reducers/userReducer'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      console.log('load user', loggedUserJSON)\n      const user = JSON.parse(loggedUserJSON)\n      props.setLogin(user)\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('get all blogs')\n    props.initializeBlogs()\n    props.initializeUsers()\n  }, [])\n\n  console.log('check user', props.login)\n\n  return (\n    <div>\n      <Router>\n\n        <Menu></Menu>\n\n        <Notification />\n\n        <Route exact path=\"/\" render={() => props.login ? <Blogs /> : <Redirect to=\"/login\" />} />\n        <Route exact path=\"/login\" render={() => props.login ? <Redirect to=\"/\" /> : <Login></Login>} />\n        <Route exact path=\"/blogs/:id\" render={({ match }) => <BlogView blogid={match.params.id} />} />\n        <Route exact path=\"/users\" render={() => props.login ? <UserList /> : <Redirect to=\"/login\" />} />\n        <Route exact path=\"/users/:id\" render={({ match }) => <UserView userid={match.params.id} />} />\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log('APP - mapStateToProps', state)\n  return {\n    blogs: state.blogs,\n    login: state.login,\n    // users: state.users,\n    notification: state.notification\n  }\n}\n\nconst mapDispatchToProps = {\n  initializeBlogs, createBlog, updateBlog, likeBlog, removeBlog,\n  initializeUsers,\n  setLogin, resetLogin,\n  setNotification\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\nimport { Container } from 'semantic-ui-react'\n\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n    notification: notificationReducer,\n    blogs: blogReducer,\n    users: userReducer,\n    login: loginReducer,\n})\n\nconst store = createStore(reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    ))\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <Container>\n                <App />\n            </Container>\n        </Provider>\n        ,\n        document.getElementById('root'))\n}\n\nrenderApp()\n// store.subscribe(renderApp)\n"],"sourceRoot":""}